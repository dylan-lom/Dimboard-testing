name: Issues Test
on:
  issues:
    types: [opened, edited]
jobs:
  check_issue:
    name: Check issue is a (valid) new pin request
    outputs:
      status: ${{ join(steps.*.conclusion) }}
    steps:
      - name: Check issue is a request to create a new pin
        run: test "$ISSUE_TITLE" = "New Pin"
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}

      - name: Check issue author is allowed to create pins
        run: |
          test "$PERMITTED_AUTHOR" = "*" -o "$AUTHOR_ASSOCIATION" = "$PERMITTED_AUTHOR"
        env:
          AUTHOR_ASSOCATION: ${{ github.event.issue.author_association }}
          PERMITTED_ASSOCATION: OWNER

  add_pin:
    needs: check_issue
    if: !contains(needs.check_issue.outputs.status, 'failure')
    name: Add pin to pins.json
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Checkout
        uses: actions/checkout@v2.3.4
      
      - name: Setup git and gh
        run: |
          git config user.name "github-actions[bot]"
          git config user.email ""

      - name: Add pin
        run: node .github/scripts/add-pin.js "$PINS_PATH" "$ISSUE_BODY"
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
          PINS_PATH: "pins.json"

      - name: Check output
        run: git show

      - name: Commit changes
        run: git add . && git commit -m "Add new pin (#$ISSUE_NUMBER)"
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}

      - name: Push changes
        run: git push

      - name: Close Issue
        run: |
          gh issue comment "$ISSUE_NUMBER" --body "Pin added."
          gh issue close "$ISSUE_NUMBER"
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
